[project]
name = "smart-home"
version = "0.10.0"
description = "Smart home."
authors = [{ name = "uy_sun", email = "hmy0119@gmail.com" }]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.13.5"
dependencies = [
  "django>=5.2.4",
  "strawberry-graphql-django>=0.62.0",
  "channels==4.1.0",
  "channels-redis[cryptography]>=4.2.1",
  "celery>=5.5.3",
  "django-celery-beat>=2.8.1",
  "django-cleanup>=9.0.0",
  "django-mptt>=0.17.0",
  "boto3>=1.39.3",
  "markdown>=3.8.2",
  "pillow>=11.3.0",
  "psycopg[binary]>=3.2.9",
  "sentry-sdk>=2.32.0",
  "geoip2>=5.1.0",
  "httpx>=0.28.1",
  "uvicorn[standard]>=0.35.0",
  "gunicorn>=23.0.0",
  "uvicorn-worker>=0.3.0",
]

[project.urls]
Homepage = "https://github.com/he0119/smart-home"
Repository = "https://github.com/he0119/smart-home.git"
Issues = "https://github.com/he0119/smart-home/issues"
Changelog = "https://github.com/he0119/smart-home/blob/main/CHANGELOG.md"

[tool.uv]
dev-dependencies = [
  "coverage>=7.9.2",
  "django-cors-headers>=4.7.0",
  "eventlet>=0.40.1",
  "daphne>=4.2.1",
  "strawberry-graphql-django[debug-toolbar]>=0.62.0",
  "poethepoet>=0.36.0",
  "bump-my-version>=1.2.0",
]

[tool.uv.pip]
universal = true

[tool.poe.tasks]
test = ["test:run", "test:report"]
"test:run" = "coverage run manage.py test --no-input"
"test:report" = "coverage xml"
loaddata = "python manage.py loaddata"
migrate = "python manage.py migrate"
makemigrations = "python manage.py makemigrations"
bump = "bump-my-version bump"
show-bump = "bump-my-version show-bump"

[tool.pyright]
pythonVersion = "3.13"
pythonPlatform = "All"
typeCheckingMode = "standard"

[tool.ruff]
line-length = 120
target-version = "py313"
exclude = ["home/push/mipush"]

[tool.ruff.lint]
select = [
  "W",   # pycodestyle warnings
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "UP",  # pyupgrade
  "C4",  # flake8-comprehensions
  "T10", # flake8-debugger
  "T20", # flake8-print
  "PYI", # flake8-pyi
  "DJ",  # flake8-django
  "Q",   # flake8-quotes
  "TC",  # flake8-type-checking
  "RUF", # Ruff-specific rules
  "I",   # isort
]
ignore = [
  "E402",   # module-import-not-at-top-of-file, Module level import not at top of cell
  "E501",   # line too long
  "RUF001", # ambiguous-unicode-character-string
  "RUF002", # ambiguous-unicode-character-docstring
  "RUF003", # ambiguous-unicode-character-comment
  "RUF012", # mutable-class-default
]

[tool.coverage.report]
omit = [
  "*/migrations/*",
  "*/admin.py",
  "home/push/mipush/*",
  "home/settings",
  "manage.py",
]

[tool.bumpversion]
current_version = "0.10.0"
commit = true
message = "chore(release): {new_version} [skip ci]"

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "## [Unreleased]"
replace = "## [Unreleased]\n\n## [{new_version}] - {now:%Y-%m-%d}"

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
regex = true
search = "\\[Unreleased\\]: (https://.+?)v{current_version}\\.\\.\\.HEAD"
replace = "[Unreleased]: \\1v{new_version}...HEAD\n[{new_version}]: \\1v{current_version}...v{new_version}"
